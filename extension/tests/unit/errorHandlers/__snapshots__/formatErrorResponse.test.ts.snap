// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`formatErrorResponse should return Bad request when error's status is 400 1`] = `
Array [
  Object {
    "code": "SyntaxError",
    "extensionExtraInfo": Object {
      "field": "amount.value",
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/overview/handling-errors",
          "type": "text/html",
        },
      },
      "originalStatusCode": 400,
      "title": "Bad Request",
    },
    "message": undefined,
  },
]
`;

exports[`formatErrorResponse should return Forbidden when error's status is 403 or 4O1 1`] = `
Array [
  Object {
    "code": "Unauthorized",
    "extensionExtraInfo": Object {
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/overview/authentication",
          "type": "text/html",
        },
      },
      "originalStatusCode": 401,
      "title": "Unauthorized Request",
    },
    "message": undefined,
  },
]
`;

exports[`formatErrorResponse should return General error when the error's status is greater or equal to 500 1`] = `
Array [
  Object {
    "code": "General",
    "extensionExtraInfo": Object {
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/overview/handling-errors",
          "type": "text/html",
        },
      },
      "originalStatusCode": 503,
      "title": "Server Error",
    },
    "message": "Please see logs for more details",
  },
]
`;

exports[`formatErrorResponse should return InvalidOperation when error's status is 409 1`] = `
Array [
  Object {
    "code": "InvalidOperation",
    "extensionExtraInfo": Object {
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/overview/handling-errors",
          "type": "text/html",
        },
      },
      "originalStatusCode": 409,
      "title": "Conflict",
    },
    "message": "A duplicate refund has been detected",
  },
]
`;

exports[`formatErrorResponse should return Not Found when error's status is 404 1`] = `
Array [
  Object {
    "code": "ObjectNotFound",
    "extensionExtraInfo": Object {
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/overview/handling-errors",
          "type": "text/html",
        },
      },
      "originalStatusCode": 404,
      "title": "Not Found",
    },
    "message": "No order exists with token ord_xxxxx.",
  },
]
`;

exports[`formatErrorResponse should return Unprocessable Entity when error's status is 422 1`] = `
Array [
  Object {
    "code": "SemanticError",
    "extensionExtraInfo": Object {
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/reference/v2/orders-api/create-order-payment",
          "type": "text/html",
        },
      },
      "originalStatusCode": 422,
      "title": "Unprocessable Entity",
    },
    "message": "The maximum number of payments has been reached for this order",
  },
]
`;

exports[`formatErrorResponse should return a general 4xx error when the error's status is 4xx, but not 400, 401 or 403 1`] = `
Array [
  Object {
    "code": "SyntaxError",
    "extensionExtraInfo": Object {
      "field": "amount.value",
      "links": Object {
        "documentation": Object {
          "href": "https://docs.mollie.com/overview/handling-errors",
          "type": "text/html",
        },
      },
      "originalStatusCode": 402,
      "title": "Payment Required",
    },
    "message": "Request error",
  },
]
`;
